@{
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
}

@model TrashCollectorProject.Models.Customer

@{
    ViewBag.Title = "Edit";
}

<br />

<h2>Temporarily Suspend Services</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Please select the timeframe for which you'd like to suspend services: </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.TempSuspendStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TempSuspendStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TempSuspendStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TempSuspendEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TempSuspendEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TempSuspendEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Id);
    @Html.HiddenFor(model => model.FirstName);
    @Html.HiddenFor(model => model.LastName);
    @Html.HiddenFor(model => model.ApplicationId);
    @Html.HiddenFor(model => model.Balance);
    @Html.HiddenFor(model => model.Street);
    @Html.HiddenFor(model => model.City);
    @Html.HiddenFor(model => model.State);
    @Html.HiddenFor(model => model.Zip);
    @Html.HiddenFor(model => model.DayId);
    @Html.HiddenFor(model => model.ExtraPickup);

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
